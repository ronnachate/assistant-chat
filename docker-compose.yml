---
#docker compose file for dev env setup
version: '3'
services:
  assitantdb:
    image: postgres:14
    environment:
      - TZ=Asia/Jakarta
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - assitantdb:/var/lib/postgresql/data

  messagedb:
    image: mongo
    environment:
      - TZ=Asia/Jakarta
    ports:
      - "27017:27017"
    volumes:
      - messagedb:/data/db

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      - TZ=Asia/Jakarta
    ports:
      - '15672:15672'
      - '5672:5672'

  seq:
    image: datalust/seq:latest
    environment:
      - ACCEPT_EULA=Y
      - TZ=Asia/Jakarta
    ports:
      - '5340:80'
  
  apigateway:
    image: envoyproxy/envoy:v1.11.1
    volumes:
      - ./apigateway/envoy/envoy.yaml:/etc/envoy/envoy.yaml
    ports:
    - "4001:80"

  assistant-api:
    build:
      context: .
      dockerfile: ./apps/assistant-api/Dockerfile
    container_name: assistant-api
    environment:
      - PORT=${PORT}
      - DB_HOST=assitantdb
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SEQ_SERVER_URL=http://seq:5340
      - SEQ_API_KEY=${SEQ_API_KEY}
      - RABBITMQ_EXCHANGE_NAME=${RABBITMQ_EXCHANGE_NAME}
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
    ports:
      - '3001:3001'
    depends_on:
      - assitantdb
      - rabbitmq
      - seq
  
  message-api:
    build:
      context: .
      dockerfile: ./apps/message-api/Dockerfile
    container_name: message-api
    environment:
      - PORT=${PORT}
      - SEQ_SERVER_URL=http://seq:5340
      - SEQ_API_KEY=${SEQ_API_KEY}
      - RABBITMQ_EXCHANGE_NAME=${RABBITMQ_EXCHANGE_NAME}
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
      - MONGODB_URI=mongodb://messagedb:27017
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL}
    ports:
      - '3002:3002'
    depends_on:
      - messagedb
      - rabbitmq
      - seq

  webapp:
    build:
      context: .
      dockerfile: ./apps/assistant-web/Dockerfile
    container_name: webapp
    environment:
      - GATEWAY_URL=${GATEWAY_URL}
    ports:
      - '3000:8080'
    depends_on:
      - assistant-api
      - message-api
      - apigateway

volumes:
  assitantdb:
    external: false
  messagedb:
    external: false
